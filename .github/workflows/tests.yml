name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true  # Ensures CODECOV_TOKEN is required for this workflow


jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install the project
        run: |
          uv sync --frozen --group dev

      - name: Check types
        run: |
          uv run mypy src/tursu/

      - name: Run tests
        # https://github.com/pytest-dev/pytest-cov/issues/510
        run: |
          COV_CORE_SOURCE=src COV_CORE_CONFIG=.coveragerc COV_CORE_DATAFILE=.coverage.eager \
          uv run pytest tests/unittests tests/functionals \
            --junitxml=junit/test-results-${{ matrix.python-version }}.xml \
            --cov --cov-append \
            --cov=tursu --cov-report=xml --cov-report=html

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }} && matrix.python-version == '3.12' && github.event_name != 'workflow_dispatch'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: junit/test-results-${{ matrix.python-version }}.xml

      - name: Codecov
        if: matrix.python-version == '3.12' && github.event_name != 'workflow_dispatch'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
